{"version":3,"file":"background.js","sources":["../src/background/background.ts"],"sourcesContent":["interface TabContext {\n  url: string;\n  cookies: chrome.cookies.Cookie[];\n  pageData: any;\n  timestamp: string;\n}\n\ninterface MessageRequest {\n  type: string;\n  endpoint?: string;\n  data?: any;\n  message?: string;\n}\n\ninterface ApiResponse {\n  success: boolean;\n  data?: any;\n  error?: string;\n}\n\nconst API_URL = 'http://localhost:8000';\n\n// Store for current tab's context\nlet currentTabContext: TabContext | null = null;\n\n// Get cookies and page data for a tab\nasync function getTabContext(tab: chrome.tabs.Tab): Promise<TabContext | null> {\n  try {\n    if (!tab.id || !tab.url) return null;\n\n    const cookies = await chrome.cookies.getAll({ url: tab.url });\n    \n    try {\n      const response = await chrome.tabs.sendMessage(tab.id, { type: 'GET_PAGE_DATA' });\n      return {\n        url: tab.url,\n        cookies,\n        pageData: response?.data || null,\n        timestamp: new Date().toISOString(),\n      };\n    } catch (error) {\n      console.error('Error getting page data:', error);\n      return {\n        url: tab.url,\n        cookies,\n        pageData: null,\n        timestamp: new Date().toISOString(),\n      };\n    }\n  } catch (error) {\n    console.error('Error getting tab context:', error);\n    return null;\n  }\n}\n\n// Update context when tab changes\nchrome.tabs.onActivated.addListener(async (activeInfo) => {\n  try {\n    const tab = await chrome.tabs.get(activeInfo.tabId);\n    currentTabContext = await getTabContext(tab);\n  } catch (error) {\n    console.error('Error handling tab activation:', error);\n    currentTabContext = null;\n  }\n});\n\n// Handle messages from content script and popup\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  console.log('[Background] Message received:', request);\n\n  if (request.type === 'PAGE_DATA_UPDATED' && sender.tab?.id) {\n    handlePageUpdate(sender.tab.id).catch(console.error);\n    return false;\n  }\n\n  if (request.type === 'API_REQUEST') {\n    // Important: Return true to indicate we will send a response asynchronously\n    (async () => {\n      try {\n        const response = await handleApiRequest(request);\n        console.log('[Background] Sending success response:', response);\n        sendResponse(response);\n      } catch (error) {\n        console.error('[Background] Error in message handler:', error);\n        sendResponse({ error: error instanceof Error ? error.message : String(error) });\n      }\n    })();\n    return true;\n  }\n\n  if (request.type === 'CHAT_MESSAGE') {\n    handleChatMessage(request.message || '')\n      .then(response => sendResponse({ success: true, data: response }))\n      .catch(error => sendResponse({ \n        success: false, \n        error: error instanceof Error ? error.message : 'Unknown error'\n      }));\n    return true;\n  }\n\n  return false;\n});\n\nasync function handlePageUpdate(tabId: number): Promise<void> {\n  try {\n    const tab = await chrome.tabs.get(tabId);\n    currentTabContext = await getTabContext(tab);\n  } catch (error) {\n    console.error('Error updating page data:', error);\n    currentTabContext = null;\n  }\n}\n\nasync function handleChatMessage(message: string): Promise<any> {\n  const response = await fetch(`${API_URL}/chat`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      message,\n      context: currentTabContext,\n    }),\n  });\n\n  if (!response.ok) {\n    throw new Error(`Chat request failed: ${response.statusText}`);\n  }\n\n  return response.json();\n}\n\nasync function handleApiRequest(request: MessageRequest): Promise<any> {\n  console.log('[Background] Starting API request:', request);\n\n  if (!request.endpoint) {\n    throw new Error('No endpoint specified');\n  }\n\n  try {\n    const url = `${API_URL}${request.endpoint}`;\n    console.log('[Background] Making fetch request to:', url);\n    console.log('[Background] Request data:', request.data);\n\n    const fetchOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(request.data),\n    };\n\n    console.log('[Background] Fetch options:', fetchOptions);\n\n    const response = await fetch(url, fetchOptions);\n    console.log('[Background] Response status:', response.status);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('[Background] Error response:', errorText);\n      throw new Error(`API request failed: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const responseData = await response.json();\n    console.log('[Background] Success response:', responseData);\n    return responseData;\n  } catch (error) {\n    console.error('[Background] Request failed:', error);\n    throw error instanceof Error ? error : new Error(String(error));\n  }\n}\n\n// Handle extension icon click\nchrome.action.onClicked.addListener((tab) => {\n  chrome.tabs.create({\n    url: chrome.runtime.getURL('index.html')\n  });\n});\n"],"names":[],"mappings":"AAoBA,MAAM,OAAU,GAAA,uBAAA,CAAA;AAGhB,IAAI,iBAAuC,GAAA,IAAA,CAAA;AAG3C,eAAe,cAAc,GAAkD,EAAA;AAC7E,EAAI,IAAA;AACF,IAAA,IAAI,CAAC,GAAI,CAAA,EAAA,IAAM,CAAC,GAAA,CAAI,KAAY,OAAA,IAAA,CAAA;AAEhC,IAAM,MAAA,OAAA,GAAU,MAAM,MAAO,CAAA,OAAA,CAAQ,OAAO,EAAE,GAAA,EAAK,GAAI,CAAA,GAAA,EAAK,CAAA,CAAA;AAE5D,IAAI,IAAA;AACF,MAAM,MAAA,QAAA,GAAW,MAAM,MAAA,CAAO,IAAK,CAAA,WAAA,CAAY,IAAI,EAAI,EAAA,EAAE,IAAM,EAAA,eAAA,EAAiB,CAAA,CAAA;AAChF,MAAO,OAAA;AAAA,QACL,KAAK,GAAI,CAAA,GAAA;AAAA,QACT,OAAA;AAAA,QACA,QAAA,EAAU,UAAU,IAAQ,IAAA,IAAA;AAAA,QAC5B,SAAW,EAAA,iBAAA,IAAI,IAAK,EAAA,EAAE,WAAY,EAAA;AAAA,OACpC,CAAA;AAAA,aACO,KAAO,EAAA;AACd,MAAQ,OAAA,CAAA,KAAA,CAAM,4BAA4B,KAAK,CAAA,CAAA;AAC/C,MAAO,OAAA;AAAA,QACL,KAAK,GAAI,CAAA,GAAA;AAAA,QACT,OAAA;AAAA,QACA,QAAU,EAAA,IAAA;AAAA,QACV,SAAW,EAAA,iBAAA,IAAI,IAAK,EAAA,EAAE,WAAY,EAAA;AAAA,OACpC,CAAA;AAAA,KACF;AAAA,WACO,KAAO,EAAA;AACd,IAAQ,OAAA,CAAA,KAAA,CAAM,8BAA8B,KAAK,CAAA,CAAA;AACjD,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AACF,CAAA;AAGA,MAAA,CAAO,IAAK,CAAA,WAAA,CAAY,WAAY,CAAA,OAAO,UAAe,KAAA;AACxD,EAAI,IAAA;AACF,IAAA,MAAM,MAAM,MAAM,MAAA,CAAO,IAAK,CAAA,GAAA,CAAI,WAAW,KAAK,CAAA,CAAA;AAClD,IAAoB,iBAAA,GAAA,MAAM,cAAc,GAAG,CAAA,CAAA;AAAA,WACpC,KAAO,EAAA;AACd,IAAQ,OAAA,CAAA,KAAA,CAAM,kCAAkC,KAAK,CAAA,CAAA;AACrD,IAAoB,iBAAA,GAAA,IAAA,CAAA;AAAA,GACtB;AACF,CAAC,CAAA,CAAA;AAGD,MAAA,CAAO,QAAQ,SAAU,CAAA,WAAA,CAAY,CAAC,OAAA,EAAS,QAAQ,YAAiB,KAAA;AACtE,EAAQ,OAAA,CAAA,GAAA,CAAI,kCAAkC,OAAO,CAAA,CAAA;AAErD,EAAA,IAAI,OAAQ,CAAA,IAAA,KAAS,mBAAuB,IAAA,MAAA,CAAO,KAAK,EAAI,EAAA;AAC1D,IAAA,gBAAA,CAAiB,OAAO,GAAI,CAAA,EAAE,CAAE,CAAA,KAAA,CAAM,QAAQ,KAAK,CAAA,CAAA;AACnD,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAEA,EAAI,IAAA,OAAA,CAAQ,SAAS,aAAe,EAAA;AAElC,IAAA,CAAC,YAAY;AACX,MAAI,IAAA;AACF,QAAM,MAAA,QAAA,GAAW,MAAM,gBAAA,CAAiB,OAAO,CAAA,CAAA;AAC/C,QAAQ,OAAA,CAAA,GAAA,CAAI,0CAA0C,QAAQ,CAAA,CAAA;AAC9D,QAAA,YAAA,CAAa,QAAQ,CAAA,CAAA;AAAA,eACd,KAAO,EAAA;AACd,QAAQ,OAAA,CAAA,KAAA,CAAM,0CAA0C,KAAK,CAAA,CAAA;AAC7D,QAAa,YAAA,CAAA,EAAE,OAAO,KAAiB,YAAA,KAAA,GAAQ,MAAM,OAAU,GAAA,MAAA,CAAO,KAAK,CAAA,EAAG,CAAA,CAAA;AAAA,OAChF;AAAA,KACC,GAAA,CAAA;AACH,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAI,IAAA,OAAA,CAAQ,SAAS,cAAgB,EAAA;AACnC,IAAA,iBAAA,CAAkB,QAAQ,OAAW,IAAA,EAAE,CACpC,CAAA,IAAA,CAAK,cAAY,YAAa,CAAA,EAAE,OAAS,EAAA,IAAA,EAAM,MAAM,QAAS,EAAC,CAAC,CAChE,CAAA,KAAA,CAAM,WAAS,YAAa,CAAA;AAAA,MAC3B,OAAS,EAAA,KAAA;AAAA,MACT,KAAO,EAAA,KAAA,YAAiB,KAAQ,GAAA,KAAA,CAAM,OAAU,GAAA,eAAA;AAAA,KACjD,CAAC,CAAA,CAAA;AACJ,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAO,OAAA,KAAA,CAAA;AACT,CAAC,CAAA,CAAA;AAED,eAAe,iBAAiB,KAA8B,EAAA;AAC5D,EAAI,IAAA;AACF,IAAA,MAAM,GAAM,GAAA,MAAM,MAAO,CAAA,IAAA,CAAK,IAAI,KAAK,CAAA,CAAA;AACvC,IAAoB,iBAAA,GAAA,MAAM,cAAc,GAAG,CAAA,CAAA;AAAA,WACpC,KAAO,EAAA;AACd,IAAQ,OAAA,CAAA,KAAA,CAAM,6BAA6B,KAAK,CAAA,CAAA;AAChD,IAAoB,iBAAA,GAAA,IAAA,CAAA;AAAA,GACtB;AACF,CAAA;AAEA,eAAe,kBAAkB,OAA+B,EAAA;AAC9D,EAAA,MAAM,QAAW,GAAA,MAAM,KAAM,CAAA,CAAA,EAAG,OAAO,CAAS,KAAA,CAAA,EAAA;AAAA,IAC9C,MAAQ,EAAA,MAAA;AAAA,IACR,OAAS,EAAA;AAAA,MACP,cAAgB,EAAA,kBAAA;AAAA,KAClB;AAAA,IACA,IAAA,EAAM,KAAK,SAAU,CAAA;AAAA,MACnB,OAAA;AAAA,MACA,OAAS,EAAA,iBAAA;AAAA,KACV,CAAA;AAAA,GACF,CAAA,CAAA;AAED,EAAI,IAAA,CAAC,SAAS,EAAI,EAAA;AAChB,IAAA,MAAM,IAAI,KAAA,CAAM,CAAwB,qBAAA,EAAA,QAAA,CAAS,UAAU,CAAE,CAAA,CAAA,CAAA;AAAA,GAC/D;AAEA,EAAA,OAAO,SAAS,IAAK,EAAA,CAAA;AACvB,CAAA;AAEA,eAAe,iBAAiB,OAAuC,EAAA;AACrE,EAAQ,OAAA,CAAA,GAAA,CAAI,sCAAsC,OAAO,CAAA,CAAA;AAEzD,EAAI,IAAA,CAAC,QAAQ,QAAU,EAAA;AACrB,IAAM,MAAA,IAAI,MAAM,uBAAuB,CAAA,CAAA;AAAA,GACzC;AAEA,EAAI,IAAA;AACF,IAAA,MAAM,GAAM,GAAA,CAAA,EAAG,OAAO,CAAA,EAAG,QAAQ,QAAQ,CAAA,CAAA,CAAA;AACzC,IAAQ,OAAA,CAAA,GAAA,CAAI,yCAAyC,GAAG,CAAA,CAAA;AACxD,IAAQ,OAAA,CAAA,GAAA,CAAI,4BAA8B,EAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AAEtD,IAAA,MAAM,YAAe,GAAA;AAAA,MACnB,MAAQ,EAAA,MAAA;AAAA,MACR,OAAS,EAAA;AAAA,QACP,cAAgB,EAAA,kBAAA;AAAA,QAChB,QAAU,EAAA,kBAAA;AAAA,OACZ;AAAA,MACA,IAAM,EAAA,IAAA,CAAK,SAAU,CAAA,OAAA,CAAQ,IAAI,CAAA;AAAA,KACnC,CAAA;AAEA,IAAQ,OAAA,CAAA,GAAA,CAAI,+BAA+B,YAAY,CAAA,CAAA;AAEvD,IAAA,MAAM,QAAW,GAAA,MAAM,KAAM,CAAA,GAAA,EAAK,YAAY,CAAA,CAAA;AAC9C,IAAQ,OAAA,CAAA,GAAA,CAAI,+BAAiC,EAAA,QAAA,CAAS,MAAM,CAAA,CAAA;AAE5D,IAAI,IAAA,CAAC,SAAS,EAAI,EAAA;AAChB,MAAM,MAAA,SAAA,GAAY,MAAM,QAAA,CAAS,IAAK,EAAA,CAAA;AACtC,MAAQ,OAAA,CAAA,KAAA,CAAM,gCAAgC,SAAS,CAAA,CAAA;AACvD,MAAM,MAAA,IAAI,KAAM,CAAA,CAAA,oBAAA,EAAuB,QAAS,CAAA,MAAM,IAAI,QAAS,CAAA,UAAU,CAAM,GAAA,EAAA,SAAS,CAAE,CAAA,CAAA,CAAA;AAAA,KAChG;AAEA,IAAM,MAAA,YAAA,GAAe,MAAM,QAAA,CAAS,IAAK,EAAA,CAAA;AACzC,IAAQ,OAAA,CAAA,GAAA,CAAI,kCAAkC,YAAY,CAAA,CAAA;AAC1D,IAAO,OAAA,YAAA,CAAA;AAAA,WACA,KAAO,EAAA;AACd,IAAQ,OAAA,CAAA,KAAA,CAAM,gCAAgC,KAAK,CAAA,CAAA;AACnD,IAAA,MAAM,iBAAiB,KAAQ,GAAA,KAAA,GAAQ,IAAI,KAAM,CAAA,MAAA,CAAO,KAAK,CAAC,CAAA,CAAA;AAAA,GAChE;AACF,CAAA;AAGA,MAAA,CAAO,MAAO,CAAA,SAAA,CAAU,WAAY,CAAA,CAAC,GAAQ,KAAA;AAC3C,EAAA,MAAA,CAAO,KAAK,MAAO,CAAA;AAAA,IACjB,GAAK,EAAA,MAAA,CAAO,OAAQ,CAAA,MAAA,CAAO,YAAY,CAAA;AAAA,GACxC,CAAA,CAAA;AACH,CAAC,CAAA"}